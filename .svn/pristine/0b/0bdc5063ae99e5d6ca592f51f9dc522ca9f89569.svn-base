/*
 * This file is generated by jOOQ.
*/
package com.yz.album.orm.tables;


import com.yz.album.orm.Keys;
import com.yz.album.orm.tables.records.AlbumRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Album extends TableImpl<AlbumRecord> {

    private static final long serialVersionUID = 795663400;

    /**
     * The reference instance of <code>album.album</code>
     */
    public static final Album ALBUM_ = new Album();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AlbumRecord> getRecordType() {
        return AlbumRecord.class;
    }

    /**
     * The column <code>album.album.id</code>.
     */
    public final TableField<AlbumRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>album.album.name</code>.
     */
    public final TableField<AlbumRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(500).nullable(false), this, "");

    /**
     * The column <code>album.album.thumbnail_url</code>.
     */
    public final TableField<AlbumRecord, String> THUMBNAIL_URL = createField("thumbnail_url", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>album.album.breif</code>.
     */
    public final TableField<AlbumRecord, String> BREIF = createField("breif", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>album.album.access_type</code>. 1--&gt;黄图，2--&gt;非黄
     */
    public final TableField<AlbumRecord, String> ACCESS_TYPE = createField("access_type", org.jooq.impl.SQLDataType.VARCHAR.length(1).nullable(false), this, "1-->黄图，2-->非黄");

    /**
     * The column <code>album.album.is_putaway</code>.
     */
    public final TableField<AlbumRecord, String> IS_PUTAWAY = createField("is_putaway", org.jooq.impl.SQLDataType.VARCHAR.length(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>album.album.putaway_time</code>.
     */
    public final TableField<AlbumRecord, Timestamp> PUTAWAY_TIME = createField("putaway_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>album.album.is_banner</code>.
     */
    public final TableField<AlbumRecord, Integer> IS_BANNER = createField("is_banner", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>album.album.channel_num</code>.
     */
    public final TableField<AlbumRecord, String> CHANNEL_NUM = createField("channel_num", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>album.album.download_time</code>.
     */
    public final TableField<AlbumRecord, Integer> DOWNLOAD_TIME = createField("download_time", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>album.album</code> table reference
     */
    public Album() {
        this("album", null);
    }

    /**
     * Create an aliased <code>album.album</code> table reference
     */
    public Album(String alias) {
        this(alias, ALBUM_);
    }

    private Album(String alias, Table<AlbumRecord> aliased) {
        this(alias, aliased, null);
    }

    private Album(String alias, Table<AlbumRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return com.yz.album.orm.Album.ALBUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AlbumRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ALBUM_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AlbumRecord> getPrimaryKey() {
        return Keys.KEY_ALBUM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AlbumRecord>> getKeys() {
        return Arrays.<UniqueKey<AlbumRecord>>asList(Keys.KEY_ALBUM_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Album as(String alias) {
        return new Album(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Album rename(String name) {
        return new Album(name, null);
    }
}
