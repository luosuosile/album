/*
 * This file is generated by jOOQ.
*/
package com.yz.album.orm;


import com.yz.album.orm.tables.Album;
import com.yz.album.orm.tables.AlbumCategory;
import com.yz.album.orm.tables.AlbumPicture;
import com.yz.album.orm.tables.Banner;
import com.yz.album.orm.tables.Category;
import com.yz.album.orm.tables.Essenceurl;
import com.yz.album.orm.tables.LoginLog;
import com.yz.album.orm.tables.Picture;
import com.yz.album.orm.tables.StatisticsTemp;
import com.yz.album.orm.tables.User;
import com.yz.album.orm.tables.UserAlbumComment;
import com.yz.album.orm.tables.UserAlbumCommentPraise;
import com.yz.album.orm.tables.UserAlbumCommentSub;
import com.yz.album.orm.tables.UserAlbumFavorite;
import com.yz.album.orm.tables.UserAlbumPraise;
import com.yz.album.orm.tables.UserAlbumRead;
import com.yz.album.orm.tables.UserComplaint;
import com.yz.album.orm.tables.UserPay;
import com.yz.album.orm.tables.UserSearchKeyword;
import com.yz.album.orm.tables.UserVip;
import com.yz.album.orm.tables.records.AlbumCategoryRecord;
import com.yz.album.orm.tables.records.AlbumPictureRecord;
import com.yz.album.orm.tables.records.AlbumRecord;
import com.yz.album.orm.tables.records.BannerRecord;
import com.yz.album.orm.tables.records.CategoryRecord;
import com.yz.album.orm.tables.records.EssenceurlRecord;
import com.yz.album.orm.tables.records.LoginLogRecord;
import com.yz.album.orm.tables.records.PictureRecord;
import com.yz.album.orm.tables.records.StatisticsTempRecord;
import com.yz.album.orm.tables.records.UserAlbumCommentPraiseRecord;
import com.yz.album.orm.tables.records.UserAlbumCommentRecord;
import com.yz.album.orm.tables.records.UserAlbumCommentSubRecord;
import com.yz.album.orm.tables.records.UserAlbumFavoriteRecord;
import com.yz.album.orm.tables.records.UserAlbumPraiseRecord;
import com.yz.album.orm.tables.records.UserAlbumReadRecord;
import com.yz.album.orm.tables.records.UserComplaintRecord;
import com.yz.album.orm.tables.records.UserPayRecord;
import com.yz.album.orm.tables.records.UserRecord;
import com.yz.album.orm.tables.records.UserSearchKeywordRecord;
import com.yz.album.orm.tables.records.UserVipRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>album</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AlbumRecord, Integer> IDENTITY_ALBUM_ = Identities0.IDENTITY_ALBUM_;
    public static final Identity<AlbumCategoryRecord, Integer> IDENTITY_ALBUM_CATEGORY = Identities0.IDENTITY_ALBUM_CATEGORY;
    public static final Identity<AlbumPictureRecord, Integer> IDENTITY_ALBUM_PICTURE = Identities0.IDENTITY_ALBUM_PICTURE;
    public static final Identity<BannerRecord, Integer> IDENTITY_BANNER = Identities0.IDENTITY_BANNER;
    public static final Identity<CategoryRecord, Integer> IDENTITY_CATEGORY = Identities0.IDENTITY_CATEGORY;
    public static final Identity<EssenceurlRecord, Integer> IDENTITY_ESSENCEURL = Identities0.IDENTITY_ESSENCEURL;
    public static final Identity<LoginLogRecord, Integer> IDENTITY_LOGIN_LOG = Identities0.IDENTITY_LOGIN_LOG;
    public static final Identity<PictureRecord, Integer> IDENTITY_PICTURE = Identities0.IDENTITY_PICTURE;
    public static final Identity<StatisticsTempRecord, Integer> IDENTITY_STATISTICS_TEMP = Identities0.IDENTITY_STATISTICS_TEMP;
    public static final Identity<UserRecord, Integer> IDENTITY_USER = Identities0.IDENTITY_USER;
    public static final Identity<UserAlbumCommentRecord, Integer> IDENTITY_USER_ALBUM_COMMENT = Identities0.IDENTITY_USER_ALBUM_COMMENT;
    public static final Identity<UserAlbumCommentPraiseRecord, Integer> IDENTITY_USER_ALBUM_COMMENT_PRAISE = Identities0.IDENTITY_USER_ALBUM_COMMENT_PRAISE;
    public static final Identity<UserAlbumCommentSubRecord, Integer> IDENTITY_USER_ALBUM_COMMENT_SUB = Identities0.IDENTITY_USER_ALBUM_COMMENT_SUB;
    public static final Identity<UserAlbumFavoriteRecord, Integer> IDENTITY_USER_ALBUM_FAVORITE = Identities0.IDENTITY_USER_ALBUM_FAVORITE;
    public static final Identity<UserAlbumPraiseRecord, Integer> IDENTITY_USER_ALBUM_PRAISE = Identities0.IDENTITY_USER_ALBUM_PRAISE;
    public static final Identity<UserAlbumReadRecord, Integer> IDENTITY_USER_ALBUM_READ = Identities0.IDENTITY_USER_ALBUM_READ;
    public static final Identity<UserComplaintRecord, Integer> IDENTITY_USER_COMPLAINT = Identities0.IDENTITY_USER_COMPLAINT;
    public static final Identity<UserPayRecord, Integer> IDENTITY_USER_PAY = Identities0.IDENTITY_USER_PAY;
    public static final Identity<UserSearchKeywordRecord, Integer> IDENTITY_USER_SEARCH_KEYWORD = Identities0.IDENTITY_USER_SEARCH_KEYWORD;
    public static final Identity<UserVipRecord, Integer> IDENTITY_USER_VIP = Identities0.IDENTITY_USER_VIP;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AlbumRecord> KEY_ALBUM_PRIMARY = UniqueKeys0.KEY_ALBUM_PRIMARY;
    public static final UniqueKey<AlbumCategoryRecord> KEY_ALBUM_CATEGORY_PRIMARY = UniqueKeys0.KEY_ALBUM_CATEGORY_PRIMARY;
    public static final UniqueKey<AlbumPictureRecord> KEY_ALBUM_PICTURE_PRIMARY = UniqueKeys0.KEY_ALBUM_PICTURE_PRIMARY;
    public static final UniqueKey<BannerRecord> KEY_BANNER_PRIMARY = UniqueKeys0.KEY_BANNER_PRIMARY;
    public static final UniqueKey<EssenceurlRecord> KEY_ESSENCEURL_PRIMARY = UniqueKeys0.KEY_ESSENCEURL_PRIMARY;
    public static final UniqueKey<LoginLogRecord> KEY_LOGIN_LOG_PRIMARY = UniqueKeys0.KEY_LOGIN_LOG_PRIMARY;
    public static final UniqueKey<PictureRecord> KEY_PICTURE_PRIMARY = UniqueKeys0.KEY_PICTURE_PRIMARY;
    public static final UniqueKey<StatisticsTempRecord> KEY_STATISTICS_TEMP_PRIMARY = UniqueKeys0.KEY_STATISTICS_TEMP_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
    public static final UniqueKey<UserAlbumCommentRecord> KEY_USER_ALBUM_COMMENT_PRIMARY = UniqueKeys0.KEY_USER_ALBUM_COMMENT_PRIMARY;
    public static final UniqueKey<UserAlbumCommentPraiseRecord> KEY_USER_ALBUM_COMMENT_PRAISE_PRIMARY = UniqueKeys0.KEY_USER_ALBUM_COMMENT_PRAISE_PRIMARY;
    public static final UniqueKey<UserAlbumCommentSubRecord> KEY_USER_ALBUM_COMMENT_SUB_PRIMARY = UniqueKeys0.KEY_USER_ALBUM_COMMENT_SUB_PRIMARY;
    public static final UniqueKey<UserAlbumFavoriteRecord> KEY_USER_ALBUM_FAVORITE_PRIMARY = UniqueKeys0.KEY_USER_ALBUM_FAVORITE_PRIMARY;
    public static final UniqueKey<UserAlbumPraiseRecord> KEY_USER_ALBUM_PRAISE_PRIMARY = UniqueKeys0.KEY_USER_ALBUM_PRAISE_PRIMARY;
    public static final UniqueKey<UserAlbumReadRecord> KEY_USER_ALBUM_READ_PRIMARY = UniqueKeys0.KEY_USER_ALBUM_READ_PRIMARY;
    public static final UniqueKey<UserComplaintRecord> KEY_USER_COMPLAINT_PRIMARY = UniqueKeys0.KEY_USER_COMPLAINT_PRIMARY;
    public static final UniqueKey<UserPayRecord> KEY_USER_PAY_PRIMARY = UniqueKeys0.KEY_USER_PAY_PRIMARY;
    public static final UniqueKey<UserSearchKeywordRecord> KEY_USER_SEARCH_KEYWORD_PRIMARY = UniqueKeys0.KEY_USER_SEARCH_KEYWORD_PRIMARY;
    public static final UniqueKey<UserVipRecord> KEY_USER_VIP_PRIMARY = UniqueKeys0.KEY_USER_VIP_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AlbumCategoryRecord, AlbumRecord> ALBUM_CATEGORY_IBFK_2 = ForeignKeys0.ALBUM_CATEGORY_IBFK_2;
    public static final ForeignKey<AlbumPictureRecord, AlbumRecord> ALBUM_PICTURE_IBFK_2 = ForeignKeys0.ALBUM_PICTURE_IBFK_2;
    public static final ForeignKey<AlbumPictureRecord, PictureRecord> ALBUM_PICTURE_IBFK_1 = ForeignKeys0.ALBUM_PICTURE_IBFK_1;
    public static final ForeignKey<BannerRecord, AlbumRecord> BANNER_IBFK_1 = ForeignKeys0.BANNER_IBFK_1;
    public static final ForeignKey<LoginLogRecord, UserRecord> LOGIN_LOG_IBFK_1 = ForeignKeys0.LOGIN_LOG_IBFK_1;
    public static final ForeignKey<UserAlbumCommentRecord, UserRecord> USER_ALBUM_COMMENT_IBFK_1 = ForeignKeys0.USER_ALBUM_COMMENT_IBFK_1;
    public static final ForeignKey<UserAlbumCommentRecord, AlbumRecord> USER_ALBUM_COMMENT_IBFK_2 = ForeignKeys0.USER_ALBUM_COMMENT_IBFK_2;
    public static final ForeignKey<UserAlbumCommentPraiseRecord, UserRecord> USER_ALBUM_COMMENT_PRAISE_IBFK_1 = ForeignKeys0.USER_ALBUM_COMMENT_PRAISE_IBFK_1;
    public static final ForeignKey<UserAlbumCommentPraiseRecord, UserAlbumCommentRecord> USER_ALBUM_COMMENT_PRAISE_IBFK_2 = ForeignKeys0.USER_ALBUM_COMMENT_PRAISE_IBFK_2;
    public static final ForeignKey<UserAlbumCommentSubRecord, UserRecord> USER_ALBUM_COMMENT_SUB_IBFK_2 = ForeignKeys0.USER_ALBUM_COMMENT_SUB_IBFK_2;
    public static final ForeignKey<UserAlbumCommentSubRecord, UserAlbumCommentRecord> USER_ALBUM_COMMENT_SUB_IBFK_3 = ForeignKeys0.USER_ALBUM_COMMENT_SUB_IBFK_3;
    public static final ForeignKey<UserAlbumCommentSubRecord, UserAlbumCommentSubRecord> USER_ALBUM_COMMENT_SUB_IBFK_1 = ForeignKeys0.USER_ALBUM_COMMENT_SUB_IBFK_1;
    public static final ForeignKey<UserAlbumFavoriteRecord, UserRecord> USER_ALBUM_FAVORITE_IBFK_1 = ForeignKeys0.USER_ALBUM_FAVORITE_IBFK_1;
    public static final ForeignKey<UserAlbumFavoriteRecord, AlbumRecord> USER_ALBUM_FAVORITE_IBFK_2 = ForeignKeys0.USER_ALBUM_FAVORITE_IBFK_2;
    public static final ForeignKey<UserAlbumPraiseRecord, UserRecord> USER_ALBUM_PRAISE_IBFK_1 = ForeignKeys0.USER_ALBUM_PRAISE_IBFK_1;
    public static final ForeignKey<UserAlbumPraiseRecord, AlbumRecord> USER_ALBUM_PRAISE_IBFK_2 = ForeignKeys0.USER_ALBUM_PRAISE_IBFK_2;
    public static final ForeignKey<UserAlbumReadRecord, UserRecord> USER_ALBUM_READ_IBFK_1 = ForeignKeys0.USER_ALBUM_READ_IBFK_1;
    public static final ForeignKey<UserAlbumReadRecord, AlbumRecord> USER_ALBUM_READ_IBFK_2 = ForeignKeys0.USER_ALBUM_READ_IBFK_2;
    public static final ForeignKey<UserComplaintRecord, UserRecord> USER_COMPLAINT_IBFK_1 = ForeignKeys0.USER_COMPLAINT_IBFK_1;
    public static final ForeignKey<UserPayRecord, UserRecord> USER_PAY_IBFK_1 = ForeignKeys0.USER_PAY_IBFK_1;
    public static final ForeignKey<UserSearchKeywordRecord, UserRecord> USER_SEARCH_KEYWORD_IBFK_1 = ForeignKeys0.USER_SEARCH_KEYWORD_IBFK_1;
    public static final ForeignKey<UserVipRecord, UserRecord> USER_VIP_IBFK_1 = ForeignKeys0.USER_VIP_IBFK_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<AlbumRecord, Integer> IDENTITY_ALBUM_ = createIdentity(Album.ALBUM_, Album.ALBUM_.ID);
        public static Identity<AlbumCategoryRecord, Integer> IDENTITY_ALBUM_CATEGORY = createIdentity(AlbumCategory.ALBUM_CATEGORY, AlbumCategory.ALBUM_CATEGORY.ID);
        public static Identity<AlbumPictureRecord, Integer> IDENTITY_ALBUM_PICTURE = createIdentity(AlbumPicture.ALBUM_PICTURE, AlbumPicture.ALBUM_PICTURE.ID);
        public static Identity<BannerRecord, Integer> IDENTITY_BANNER = createIdentity(Banner.BANNER, Banner.BANNER.ID);
        public static Identity<CategoryRecord, Integer> IDENTITY_CATEGORY = createIdentity(Category.CATEGORY, Category.CATEGORY.ID);
        public static Identity<EssenceurlRecord, Integer> IDENTITY_ESSENCEURL = createIdentity(Essenceurl.ESSENCEURL, Essenceurl.ESSENCEURL.ID);
        public static Identity<LoginLogRecord, Integer> IDENTITY_LOGIN_LOG = createIdentity(LoginLog.LOGIN_LOG, LoginLog.LOGIN_LOG.ID);
        public static Identity<PictureRecord, Integer> IDENTITY_PICTURE = createIdentity(Picture.PICTURE, Picture.PICTURE.ID);
        public static Identity<StatisticsTempRecord, Integer> IDENTITY_STATISTICS_TEMP = createIdentity(StatisticsTemp.STATISTICS_TEMP, StatisticsTemp.STATISTICS_TEMP.ID);
        public static Identity<UserRecord, Integer> IDENTITY_USER = createIdentity(User.USER, User.USER.ID);
        public static Identity<UserAlbumCommentRecord, Integer> IDENTITY_USER_ALBUM_COMMENT = createIdentity(UserAlbumComment.USER_ALBUM_COMMENT, UserAlbumComment.USER_ALBUM_COMMENT.ID);
        public static Identity<UserAlbumCommentPraiseRecord, Integer> IDENTITY_USER_ALBUM_COMMENT_PRAISE = createIdentity(UserAlbumCommentPraise.USER_ALBUM_COMMENT_PRAISE, UserAlbumCommentPraise.USER_ALBUM_COMMENT_PRAISE.ID);
        public static Identity<UserAlbumCommentSubRecord, Integer> IDENTITY_USER_ALBUM_COMMENT_SUB = createIdentity(UserAlbumCommentSub.USER_ALBUM_COMMENT_SUB, UserAlbumCommentSub.USER_ALBUM_COMMENT_SUB.ID);
        public static Identity<UserAlbumFavoriteRecord, Integer> IDENTITY_USER_ALBUM_FAVORITE = createIdentity(UserAlbumFavorite.USER_ALBUM_FAVORITE, UserAlbumFavorite.USER_ALBUM_FAVORITE.ID);
        public static Identity<UserAlbumPraiseRecord, Integer> IDENTITY_USER_ALBUM_PRAISE = createIdentity(UserAlbumPraise.USER_ALBUM_PRAISE, UserAlbumPraise.USER_ALBUM_PRAISE.ID);
        public static Identity<UserAlbumReadRecord, Integer> IDENTITY_USER_ALBUM_READ = createIdentity(UserAlbumRead.USER_ALBUM_READ, UserAlbumRead.USER_ALBUM_READ.ID);
        public static Identity<UserComplaintRecord, Integer> IDENTITY_USER_COMPLAINT = createIdentity(UserComplaint.USER_COMPLAINT, UserComplaint.USER_COMPLAINT.ID);
        public static Identity<UserPayRecord, Integer> IDENTITY_USER_PAY = createIdentity(UserPay.USER_PAY, UserPay.USER_PAY.ID);
        public static Identity<UserSearchKeywordRecord, Integer> IDENTITY_USER_SEARCH_KEYWORD = createIdentity(UserSearchKeyword.USER_SEARCH_KEYWORD, UserSearchKeyword.USER_SEARCH_KEYWORD.ID);
        public static Identity<UserVipRecord, Integer> IDENTITY_USER_VIP = createIdentity(UserVip.USER_VIP, UserVip.USER_VIP.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<AlbumRecord> KEY_ALBUM_PRIMARY = createUniqueKey(Album.ALBUM_, "KEY_album_PRIMARY", Album.ALBUM_.ID);
        public static final UniqueKey<AlbumCategoryRecord> KEY_ALBUM_CATEGORY_PRIMARY = createUniqueKey(AlbumCategory.ALBUM_CATEGORY, "KEY_album_category_PRIMARY", AlbumCategory.ALBUM_CATEGORY.ID);
        public static final UniqueKey<AlbumPictureRecord> KEY_ALBUM_PICTURE_PRIMARY = createUniqueKey(AlbumPicture.ALBUM_PICTURE, "KEY_album_picture_PRIMARY", AlbumPicture.ALBUM_PICTURE.ID);
        public static final UniqueKey<BannerRecord> KEY_BANNER_PRIMARY = createUniqueKey(Banner.BANNER, "KEY_banner_PRIMARY", Banner.BANNER.ID);
        public static final UniqueKey<EssenceurlRecord> KEY_ESSENCEURL_PRIMARY = createUniqueKey(Essenceurl.ESSENCEURL, "KEY_essenceurl_PRIMARY", Essenceurl.ESSENCEURL.ID);
        public static final UniqueKey<LoginLogRecord> KEY_LOGIN_LOG_PRIMARY = createUniqueKey(LoginLog.LOGIN_LOG, "KEY_login_log_PRIMARY", LoginLog.LOGIN_LOG.ID);
        public static final UniqueKey<PictureRecord> KEY_PICTURE_PRIMARY = createUniqueKey(Picture.PICTURE, "KEY_picture_PRIMARY", Picture.PICTURE.ID);
        public static final UniqueKey<StatisticsTempRecord> KEY_STATISTICS_TEMP_PRIMARY = createUniqueKey(StatisticsTemp.STATISTICS_TEMP, "KEY_statistics_temp_PRIMARY", StatisticsTemp.STATISTICS_TEMP.ID);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = createUniqueKey(User.USER, "KEY_user_PRIMARY", User.USER.ID);
        public static final UniqueKey<UserAlbumCommentRecord> KEY_USER_ALBUM_COMMENT_PRIMARY = createUniqueKey(UserAlbumComment.USER_ALBUM_COMMENT, "KEY_user_album_comment_PRIMARY", UserAlbumComment.USER_ALBUM_COMMENT.ID);
        public static final UniqueKey<UserAlbumCommentPraiseRecord> KEY_USER_ALBUM_COMMENT_PRAISE_PRIMARY = createUniqueKey(UserAlbumCommentPraise.USER_ALBUM_COMMENT_PRAISE, "KEY_user_album_comment_praise_PRIMARY", UserAlbumCommentPraise.USER_ALBUM_COMMENT_PRAISE.ID);
        public static final UniqueKey<UserAlbumCommentSubRecord> KEY_USER_ALBUM_COMMENT_SUB_PRIMARY = createUniqueKey(UserAlbumCommentSub.USER_ALBUM_COMMENT_SUB, "KEY_user_album_comment_sub_PRIMARY", UserAlbumCommentSub.USER_ALBUM_COMMENT_SUB.ID);
        public static final UniqueKey<UserAlbumFavoriteRecord> KEY_USER_ALBUM_FAVORITE_PRIMARY = createUniqueKey(UserAlbumFavorite.USER_ALBUM_FAVORITE, "KEY_user_album_favorite_PRIMARY", UserAlbumFavorite.USER_ALBUM_FAVORITE.ID);
        public static final UniqueKey<UserAlbumPraiseRecord> KEY_USER_ALBUM_PRAISE_PRIMARY = createUniqueKey(UserAlbumPraise.USER_ALBUM_PRAISE, "KEY_user_album_praise_PRIMARY", UserAlbumPraise.USER_ALBUM_PRAISE.ID);
        public static final UniqueKey<UserAlbumReadRecord> KEY_USER_ALBUM_READ_PRIMARY = createUniqueKey(UserAlbumRead.USER_ALBUM_READ, "KEY_user_album_read_PRIMARY", UserAlbumRead.USER_ALBUM_READ.ID);
        public static final UniqueKey<UserComplaintRecord> KEY_USER_COMPLAINT_PRIMARY = createUniqueKey(UserComplaint.USER_COMPLAINT, "KEY_user_complaint_PRIMARY", UserComplaint.USER_COMPLAINT.ID);
        public static final UniqueKey<UserPayRecord> KEY_USER_PAY_PRIMARY = createUniqueKey(UserPay.USER_PAY, "KEY_user_pay_PRIMARY", UserPay.USER_PAY.ID);
        public static final UniqueKey<UserSearchKeywordRecord> KEY_USER_SEARCH_KEYWORD_PRIMARY = createUniqueKey(UserSearchKeyword.USER_SEARCH_KEYWORD, "KEY_user_search_keyword_PRIMARY", UserSearchKeyword.USER_SEARCH_KEYWORD.ID);
        public static final UniqueKey<UserVipRecord> KEY_USER_VIP_PRIMARY = createUniqueKey(UserVip.USER_VIP, "KEY_user_vip_PRIMARY", UserVip.USER_VIP.ID);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<AlbumCategoryRecord, AlbumRecord> ALBUM_CATEGORY_IBFK_2 = createForeignKey(com.yz.album.orm.Keys.KEY_ALBUM_PRIMARY, AlbumCategory.ALBUM_CATEGORY, "album_category_ibfk_2", AlbumCategory.ALBUM_CATEGORY.ALBUM_ID);
        public static final ForeignKey<AlbumPictureRecord, AlbumRecord> ALBUM_PICTURE_IBFK_2 = createForeignKey(com.yz.album.orm.Keys.KEY_ALBUM_PRIMARY, AlbumPicture.ALBUM_PICTURE, "album_picture_ibfk_2", AlbumPicture.ALBUM_PICTURE.ALBUM_ID);
        public static final ForeignKey<AlbumPictureRecord, PictureRecord> ALBUM_PICTURE_IBFK_1 = createForeignKey(com.yz.album.orm.Keys.KEY_PICTURE_PRIMARY, AlbumPicture.ALBUM_PICTURE, "album_picture_ibfk_1", AlbumPicture.ALBUM_PICTURE.PICTURE_ID);
        public static final ForeignKey<BannerRecord, AlbumRecord> BANNER_IBFK_1 = createForeignKey(com.yz.album.orm.Keys.KEY_ALBUM_PRIMARY, Banner.BANNER, "banner_ibfk_1", Banner.BANNER.ALBUM_ID);
        public static final ForeignKey<LoginLogRecord, UserRecord> LOGIN_LOG_IBFK_1 = createForeignKey(com.yz.album.orm.Keys.KEY_USER_PRIMARY, LoginLog.LOGIN_LOG, "login_log_ibfk_1", LoginLog.LOGIN_LOG.USER_ID);
        public static final ForeignKey<UserAlbumCommentRecord, UserRecord> USER_ALBUM_COMMENT_IBFK_1 = createForeignKey(com.yz.album.orm.Keys.KEY_USER_PRIMARY, UserAlbumComment.USER_ALBUM_COMMENT, "user_album_comment_ibfk_1", UserAlbumComment.USER_ALBUM_COMMENT.USER_ID);
        public static final ForeignKey<UserAlbumCommentRecord, AlbumRecord> USER_ALBUM_COMMENT_IBFK_2 = createForeignKey(com.yz.album.orm.Keys.KEY_ALBUM_PRIMARY, UserAlbumComment.USER_ALBUM_COMMENT, "user_album_comment_ibfk_2", UserAlbumComment.USER_ALBUM_COMMENT.ALBUM_ID);
        public static final ForeignKey<UserAlbumCommentPraiseRecord, UserRecord> USER_ALBUM_COMMENT_PRAISE_IBFK_1 = createForeignKey(com.yz.album.orm.Keys.KEY_USER_PRIMARY, UserAlbumCommentPraise.USER_ALBUM_COMMENT_PRAISE, "user_album_comment_praise_ibfk_1", UserAlbumCommentPraise.USER_ALBUM_COMMENT_PRAISE.USER_ID);
        public static final ForeignKey<UserAlbumCommentPraiseRecord, UserAlbumCommentRecord> USER_ALBUM_COMMENT_PRAISE_IBFK_2 = createForeignKey(com.yz.album.orm.Keys.KEY_USER_ALBUM_COMMENT_PRIMARY, UserAlbumCommentPraise.USER_ALBUM_COMMENT_PRAISE, "user_album_comment_praise_ibfk_2", UserAlbumCommentPraise.USER_ALBUM_COMMENT_PRAISE.COMMENT_ID);
        public static final ForeignKey<UserAlbumCommentSubRecord, UserRecord> USER_ALBUM_COMMENT_SUB_IBFK_2 = createForeignKey(com.yz.album.orm.Keys.KEY_USER_PRIMARY, UserAlbumCommentSub.USER_ALBUM_COMMENT_SUB, "user_album_comment_sub_ibfk_2", UserAlbumCommentSub.USER_ALBUM_COMMENT_SUB.USER_ID);
        public static final ForeignKey<UserAlbumCommentSubRecord, UserAlbumCommentRecord> USER_ALBUM_COMMENT_SUB_IBFK_3 = createForeignKey(com.yz.album.orm.Keys.KEY_USER_ALBUM_COMMENT_PRIMARY, UserAlbumCommentSub.USER_ALBUM_COMMENT_SUB, "user_album_comment_sub_ibfk_3", UserAlbumCommentSub.USER_ALBUM_COMMENT_SUB.PARENT_COMMENT_ID);
        public static final ForeignKey<UserAlbumCommentSubRecord, UserAlbumCommentSubRecord> USER_ALBUM_COMMENT_SUB_IBFK_1 = createForeignKey(com.yz.album.orm.Keys.KEY_USER_ALBUM_COMMENT_SUB_PRIMARY, UserAlbumCommentSub.USER_ALBUM_COMMENT_SUB, "user_album_comment_sub_ibfk_1", UserAlbumCommentSub.USER_ALBUM_COMMENT_SUB.AT_COMMENT_ID);
        public static final ForeignKey<UserAlbumFavoriteRecord, UserRecord> USER_ALBUM_FAVORITE_IBFK_1 = createForeignKey(com.yz.album.orm.Keys.KEY_USER_PRIMARY, UserAlbumFavorite.USER_ALBUM_FAVORITE, "user_album_favorite_ibfk_1", UserAlbumFavorite.USER_ALBUM_FAVORITE.USER_ID);
        public static final ForeignKey<UserAlbumFavoriteRecord, AlbumRecord> USER_ALBUM_FAVORITE_IBFK_2 = createForeignKey(com.yz.album.orm.Keys.KEY_ALBUM_PRIMARY, UserAlbumFavorite.USER_ALBUM_FAVORITE, "user_album_favorite_ibfk_2", UserAlbumFavorite.USER_ALBUM_FAVORITE.ALBUM_ID);
        public static final ForeignKey<UserAlbumPraiseRecord, UserRecord> USER_ALBUM_PRAISE_IBFK_1 = createForeignKey(com.yz.album.orm.Keys.KEY_USER_PRIMARY, UserAlbumPraise.USER_ALBUM_PRAISE, "user_album_praise_ibfk_1", UserAlbumPraise.USER_ALBUM_PRAISE.USER_ID);
        public static final ForeignKey<UserAlbumPraiseRecord, AlbumRecord> USER_ALBUM_PRAISE_IBFK_2 = createForeignKey(com.yz.album.orm.Keys.KEY_ALBUM_PRIMARY, UserAlbumPraise.USER_ALBUM_PRAISE, "user_album_praise_ibfk_2", UserAlbumPraise.USER_ALBUM_PRAISE.ALBUM_ID);
        public static final ForeignKey<UserAlbumReadRecord, UserRecord> USER_ALBUM_READ_IBFK_1 = createForeignKey(com.yz.album.orm.Keys.KEY_USER_PRIMARY, UserAlbumRead.USER_ALBUM_READ, "user_album_read_ibfk_1", UserAlbumRead.USER_ALBUM_READ.USER_ID);
        public static final ForeignKey<UserAlbumReadRecord, AlbumRecord> USER_ALBUM_READ_IBFK_2 = createForeignKey(com.yz.album.orm.Keys.KEY_ALBUM_PRIMARY, UserAlbumRead.USER_ALBUM_READ, "user_album_read_ibfk_2", UserAlbumRead.USER_ALBUM_READ.ALBUM_ID);
        public static final ForeignKey<UserComplaintRecord, UserRecord> USER_COMPLAINT_IBFK_1 = createForeignKey(com.yz.album.orm.Keys.KEY_USER_PRIMARY, UserComplaint.USER_COMPLAINT, "user_complaint_ibfk_1", UserComplaint.USER_COMPLAINT.USER_ID);
        public static final ForeignKey<UserPayRecord, UserRecord> USER_PAY_IBFK_1 = createForeignKey(com.yz.album.orm.Keys.KEY_USER_PRIMARY, UserPay.USER_PAY, "user_pay_ibfk_1", UserPay.USER_PAY.USER_ID);
        public static final ForeignKey<UserSearchKeywordRecord, UserRecord> USER_SEARCH_KEYWORD_IBFK_1 = createForeignKey(com.yz.album.orm.Keys.KEY_USER_PRIMARY, UserSearchKeyword.USER_SEARCH_KEYWORD, "user_search_keyword_ibfk_1", UserSearchKeyword.USER_SEARCH_KEYWORD.USER_ID);
        public static final ForeignKey<UserVipRecord, UserRecord> USER_VIP_IBFK_1 = createForeignKey(com.yz.album.orm.Keys.KEY_USER_PRIMARY, UserVip.USER_VIP, "user_vip_ibfk_1", UserVip.USER_VIP.USER_ID);
    }
}
