/*
 * This file is generated by jOOQ.
*/
package com.yz.album.orm.tables;


import com.yz.album.orm.Album;
import com.yz.album.orm.Keys;
import com.yz.album.orm.tables.records.BannerRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Banner extends TableImpl<BannerRecord> {

    private static final long serialVersionUID = 1175157399;

    /**
     * The reference instance of <code>album.banner</code>
     */
    public static final Banner BANNER = new Banner();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BannerRecord> getRecordType() {
        return BannerRecord.class;
    }

    /**
     * The column <code>album.banner.id</code>.
     */
    public final TableField<BannerRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>album.banner.content_url</code>. 内容网页，可能是需要访问的详情页，或直接返回URL
     */
    public final TableField<BannerRecord, String> CONTENT_URL = createField("content_url", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "内容网页，可能是需要访问的详情页，或直接返回URL");

    /**
     * The column <code>album.banner.banner_url</code>. 广告封面
     */
    public final TableField<BannerRecord, String> BANNER_URL = createField("banner_url", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "广告封面");

    /**
     * The column <code>album.banner.banner_category</code>. 广告类型:1、是套图。2、返回一个url。3是一个详情页
     */
    public final TableField<BannerRecord, String> BANNER_CATEGORY = createField("banner_category", org.jooq.impl.SQLDataType.VARCHAR.length(1), this, "广告类型:1、是套图。2、返回一个url。3是一个详情页");

    /**
     * The column <code>album.banner.create_time</code>.
     */
    public final TableField<BannerRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>album.banner.end_time</code>.
     */
    public final TableField<BannerRecord, Timestamp> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>album.banner.album_id</code>.
     */
    public final TableField<BannerRecord, Integer> ALBUM_ID = createField("album_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>album.banner.access_type</code>.
     */
    public final TableField<BannerRecord, Integer> ACCESS_TYPE = createField("access_type", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>album.banner.sort</code>.
     */
    public final TableField<BannerRecord, Integer> SORT = createField("sort", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>album.banner</code> table reference
     */
    public Banner() {
        this("banner", null);
    }

    /**
     * Create an aliased <code>album.banner</code> table reference
     */
    public Banner(String alias) {
        this(alias, BANNER);
    }

    private Banner(String alias, Table<BannerRecord> aliased) {
        this(alias, aliased, null);
    }

    private Banner(String alias, Table<BannerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Album.ALBUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BannerRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BANNER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BannerRecord> getPrimaryKey() {
        return Keys.KEY_BANNER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BannerRecord>> getKeys() {
        return Arrays.<UniqueKey<BannerRecord>>asList(Keys.KEY_BANNER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<BannerRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BannerRecord, ?>>asList(Keys.BANNER_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Banner as(String alias) {
        return new Banner(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Banner rename(String name) {
        return new Banner(name, null);
    }
}
