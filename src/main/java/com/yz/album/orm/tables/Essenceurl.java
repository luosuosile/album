/*
 * This file is generated by jOOQ.
*/
package com.yz.album.orm.tables;


import com.yz.album.orm.Album;
import com.yz.album.orm.Keys;
import com.yz.album.orm.tables.records.EssenceurlRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Essenceurl extends TableImpl<EssenceurlRecord> {

    private static final long serialVersionUID = 891592218;

    /**
     * The reference instance of <code>album.essenceurl</code>
     */
    public static final Essenceurl ESSENCEURL = new Essenceurl();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EssenceurlRecord> getRecordType() {
        return EssenceurlRecord.class;
    }

    /**
     * The column <code>album.essenceurl.id</code>.
     */
    public final TableField<EssenceurlRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>album.essenceurl.url</code>.
     */
    public final TableField<EssenceurlRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * Create a <code>album.essenceurl</code> table reference
     */
    public Essenceurl() {
        this("essenceurl", null);
    }

    /**
     * Create an aliased <code>album.essenceurl</code> table reference
     */
    public Essenceurl(String alias) {
        this(alias, ESSENCEURL);
    }

    private Essenceurl(String alias, Table<EssenceurlRecord> aliased) {
        this(alias, aliased, null);
    }

    private Essenceurl(String alias, Table<EssenceurlRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Album.ALBUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EssenceurlRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ESSENCEURL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EssenceurlRecord> getPrimaryKey() {
        return Keys.KEY_ESSENCEURL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EssenceurlRecord>> getKeys() {
        return Arrays.<UniqueKey<EssenceurlRecord>>asList(Keys.KEY_ESSENCEURL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Essenceurl as(String alias) {
        return new Essenceurl(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Essenceurl rename(String name) {
        return new Essenceurl(name, null);
    }
}
