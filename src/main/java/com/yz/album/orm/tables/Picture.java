/*
 * This file is generated by jOOQ.
*/
package com.yz.album.orm.tables;


import com.yz.album.orm.Album;
import com.yz.album.orm.Keys;
import com.yz.album.orm.tables.records.PictureRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Picture extends TableImpl<PictureRecord> {

    private static final long serialVersionUID = 112263547;

    /**
     * The reference instance of <code>album.picture</code>
     */
    public static final Picture PICTURE = new Picture();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PictureRecord> getRecordType() {
        return PictureRecord.class;
    }

    /**
     * The column <code>album.picture.id</code>.
     */
    public final TableField<PictureRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>album.picture.url</code>.
     */
    public final TableField<PictureRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(500).nullable(false), this, "");

    /**
     * Create a <code>album.picture</code> table reference
     */
    public Picture() {
        this("picture", null);
    }

    /**
     * Create an aliased <code>album.picture</code> table reference
     */
    public Picture(String alias) {
        this(alias, PICTURE);
    }

    private Picture(String alias, Table<PictureRecord> aliased) {
        this(alias, aliased, null);
    }

    private Picture(String alias, Table<PictureRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Album.ALBUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PictureRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PICTURE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PictureRecord> getPrimaryKey() {
        return Keys.KEY_PICTURE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PictureRecord>> getKeys() {
        return Arrays.<UniqueKey<PictureRecord>>asList(Keys.KEY_PICTURE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Picture as(String alias) {
        return new Picture(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Picture rename(String name) {
        return new Picture(name, null);
    }
}
