/*
 * This file is generated by jOOQ.
*/
package com.yz.album.orm.tables.records;


import com.yz.album.orm.tables.UserAlbumCommentSub;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserAlbumCommentSubRecord extends UpdatableRecordImpl<UserAlbumCommentSubRecord> implements Record7<Integer, Integer, Integer, Integer, String, Timestamp, Timestamp> {

    private static final long serialVersionUID = 49870817;

    /**
     * Setter for <code>album.user_album_comment_sub.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>album.user_album_comment_sub.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>album.user_album_comment_sub.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>album.user_album_comment_sub.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>album.user_album_comment_sub.parent_comment_id</code>.
     */
    public void setParentCommentId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>album.user_album_comment_sub.parent_comment_id</code>.
     */
    public Integer getParentCommentId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>album.user_album_comment_sub.at_comment_id</code>.
     */
    public void setAtCommentId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>album.user_album_comment_sub.at_comment_id</code>.
     */
    public Integer getAtCommentId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>album.user_album_comment_sub.content</code>.
     */
    public void setContent(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>album.user_album_comment_sub.content</code>.
     */
    public String getContent() {
        return (String) get(4);
    }

    /**
     * Setter for <code>album.user_album_comment_sub.create_time</code>.
     */
    public void setCreateTime(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>album.user_album_comment_sub.create_time</code>.
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>album.user_album_comment_sub.update_time</code>.
     */
    public void setUpdateTime(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>album.user_album_comment_sub.update_time</code>.
     */
    public Timestamp getUpdateTime() {
        return (Timestamp) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Integer, Integer, String, Timestamp, Timestamp> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Integer, Integer, String, Timestamp, Timestamp> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return UserAlbumCommentSub.USER_ALBUM_COMMENT_SUB.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return UserAlbumCommentSub.USER_ALBUM_COMMENT_SUB.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return UserAlbumCommentSub.USER_ALBUM_COMMENT_SUB.PARENT_COMMENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return UserAlbumCommentSub.USER_ALBUM_COMMENT_SUB.AT_COMMENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return UserAlbumCommentSub.USER_ALBUM_COMMENT_SUB.CONTENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return UserAlbumCommentSub.USER_ALBUM_COMMENT_SUB.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return UserAlbumCommentSub.USER_ALBUM_COMMENT_SUB.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getParentCommentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getAtCommentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAlbumCommentSubRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAlbumCommentSubRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAlbumCommentSubRecord value3(Integer value) {
        setParentCommentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAlbumCommentSubRecord value4(Integer value) {
        setAtCommentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAlbumCommentSubRecord value5(String value) {
        setContent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAlbumCommentSubRecord value6(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAlbumCommentSubRecord value7(Timestamp value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAlbumCommentSubRecord values(Integer value1, Integer value2, Integer value3, Integer value4, String value5, Timestamp value6, Timestamp value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserAlbumCommentSubRecord
     */
    public UserAlbumCommentSubRecord() {
        super(UserAlbumCommentSub.USER_ALBUM_COMMENT_SUB);
    }

    /**
     * Create a detached, initialised UserAlbumCommentSubRecord
     */
    public UserAlbumCommentSubRecord(Integer id, Integer userId, Integer parentCommentId, Integer atCommentId, String content, Timestamp createTime, Timestamp updateTime) {
        super(UserAlbumCommentSub.USER_ALBUM_COMMENT_SUB);

        set(0, id);
        set(1, userId);
        set(2, parentCommentId);
        set(3, atCommentId);
        set(4, content);
        set(5, createTime);
        set(6, updateTime);
    }
}
