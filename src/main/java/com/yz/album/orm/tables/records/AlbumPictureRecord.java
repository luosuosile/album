/*
 * This file is generated by jOOQ.
*/
package com.yz.album.orm.tables.records;


import com.yz.album.orm.tables.AlbumPicture;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AlbumPictureRecord extends UpdatableRecordImpl<AlbumPictureRecord> implements Record4<Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = -15068056;

    /**
     * Setter for <code>album.album_picture.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>album.album_picture.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>album.album_picture.album_id</code>.
     */
    public void setAlbumId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>album.album_picture.album_id</code>.
     */
    public Integer getAlbumId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>album.album_picture.picture_id</code>.
     */
    public void setPictureId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>album.album_picture.picture_id</code>.
     */
    public Integer getPictureId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>album.album_picture.sort</code>.
     */
    public void setSort(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>album.album_picture.sort</code>.
     */
    public Integer getSort() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return AlbumPicture.ALBUM_PICTURE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return AlbumPicture.ALBUM_PICTURE.ALBUM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return AlbumPicture.ALBUM_PICTURE.PICTURE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return AlbumPicture.ALBUM_PICTURE.SORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getAlbumId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getPictureId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getSort();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumPictureRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumPictureRecord value2(Integer value) {
        setAlbumId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumPictureRecord value3(Integer value) {
        setPictureId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumPictureRecord value4(Integer value) {
        setSort(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlbumPictureRecord values(Integer value1, Integer value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AlbumPictureRecord
     */
    public AlbumPictureRecord() {
        super(AlbumPicture.ALBUM_PICTURE);
    }

    /**
     * Create a detached, initialised AlbumPictureRecord
     */
    public AlbumPictureRecord(Integer id, Integer albumId, Integer pictureId, Integer sort) {
        super(AlbumPicture.ALBUM_PICTURE);

        set(0, id);
        set(1, albumId);
        set(2, pictureId);
        set(3, sort);
    }
}
